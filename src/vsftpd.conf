# File    : vsftpd.conf
# Brief   : Template for vsftpd configuration file
# Author  : Martin Rizzo | <martinrizzo@gmail.com>
# Date    : Feb 27, 2024
# Repo    : https://github.com/martin-rizzo/QuickFtpServer
# License : MIT
#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#                             QuickFtpServer
#          A lightweight, easy-to-configure FTP server using Docker
#
#     Copyright (c) 2024 Martin Rizzo
#
#     Permission is hereby granted, free of charge, to any person obtaining
#     a copy of this software and associated documentation files (the
#     "Software"), to deal in the Software without restriction, including
#     without limitation the rights to use, copy, modify, merge, publish,
#     distribute, sublicense, and/or sell copies of the Software, and to
#     permit persons to whom the Software is furnished to do so, subject to
#     the following conditions:
#
#     The above copyright notice and this permission notice shall be
#     included in all copies or substantial portions of the Software.
#
#     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
#     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
#     MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
#     IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
#     CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
#     TORT OR OTHERWISE, ARISING FROM,OUT OF OR IN CONNECTION WITH THE
#     SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
#
#  For additional options refer to the following documentation:
#    https://manpages.ubuntu.com/manpages/trusty/en/man5/vsftpd.conf.5.html
#    http://vsftpd.beasts.org/vsftpd_conf.html
#


# If enabled, vsftpd will run in standalone mode.
# This means that vsftpd itself will then take care of listening for incoming connections.
listen=YES

# If enabled, vsftpd will listen on an IPv6 socket instead of an IPv4 one.
# This parameter and the 'listen' parameter are mutually exclusive.
listen_ipv6=NO

# Controls whether any FTP commands which change the filesystem are allowed.
# These commands are: STOR, DELE, RNFR, RNTO, MKD, RMD, APPE, and SITE.
write_enable=YES

# Controls the sandboxing secure option based on seccomp.
# If enabled, it may generate random fatal errors in many kernel versions.
seccomp_sandbox=NO

# If enabled, all user and group in directory listings will be displayed as "ftp".
hide_ids=YES

# The maximum number of clients which may be connected.
# Any additional clients connecting will get an error message.
max_clients=0

# The max number of clients which may be connected from the same IP.
# A client will get an error message if they go over this limit.
max_per_ip=0

# Allow chroot()'ing a user to a writable directory.
# Note: Setting this to YES is potentially dangerous.
# Users could potentially manipulate system configurations.
allow_writeable_chroot=YES


# ---------------------------- ANONYMOUS USERS ---------------------------- #

# Controls whether anonymous logins are permitted or not.
# If enabled, usernames 'ftp' and 'anonymous' are recognised as anonymous logins.
anonymous_enable=YES

# The name of the user we use for handling anonymous FTP.
# The home directory of this user is the root of the anonymous FTP area.
ftp_username={ANON_USER_NAME}

# The max transfer rate permitted, in bytes per second, for anonymous clients.
anon_max_rate=0


# ----------------------------- VIRTUAL USERS ----------------------------- #

# If enabled, user accounts listed in '/etc/passwd' are allowed to log in.
# (It must be enabled for any non-anonymous login, including virtual users)
local_enable=YES

# If enabled, all non-anonymous logins are treated as virtual users.
# Virtual users (or guests) are automatically mapped to the user
# specified in the 'guest_username' setting.
guest_enable=YES

# This setting defines the real username to which virtual users are mapped.
guest_username={USER_NAME}

# If enabled, virtual users have privileges equivalent to local users.
# If disabled, virtual users have privileges equivalent to anonymous users.
virtual_use_local_privs=NO

## The following configurations define the token and template used
## to generate the home directory for each virtual user.
#user_sub_token=$USERNAME
#local_root=/home/$USERNAME
local_root=/app/ftp-data

# The PAM (Pluggable Auth Modules) service name used for authentication.
# It must match the PAM configuration file name in '/etc/pam.d/'
pam_service_name=vsftpd


# --------------------------------- PASV ---------------------------------- #

# Enable or disable the PASV method of obtaining a data connection.
pasv_enable=YES

# Enable or disable the PORT method of obtaining a data connection.
port_enable=NO

# Specify the minimum port for passive mode data connections.
pasv_min_port=21000

# Specify the maximum port for passive mode data connections.
pasv_max_port=21007

# Set the timeout, in seconds, for a client to establish a PASV style data connection.
accept_timeout=60


# -------------------------------- LOGGING -------------------------------- #

# If enabled, a log file will be maintained detailing uploads and downloads.
xferlog_enable=YES

# If enabled, all FTP requests and responses are logged for debugging purposes.
log_ftp_protocol=YES

# Specifies the filename for the vsftpd-style log file.
# This log file will be written if either of the following conditions is met:
#   * If 'xferlog_enable=YES' and 'xferlog_std_format=NO'.
#   * If 'dual_log_enable=YES'.
# It will NOT be written if 'syslog_enable=YES'; in such case, the output
# is sent to the system log under the FTPD facility.
vsftpd_log_file={VSFTPD_LOG_FILE}

## In case you desire two log files in parallel, the configuration should be:
#   > dual_log_enable=YES
#   > vsftpd_log_file=/var/log/vsftpd.log
#   > xferlog_file=/var/log/xferlog

